{"ast":null,"code":"// filepath: c:\\Users\\HP\\OneDrive\\Desktop\\MERNproj\\GarageSale.com\\client\\features\\auth\\actions.js\n\nimport { LOGIN_SUCCESS, LOGIN_FAIL, REGISTER_SUCCESS, REGISTER_FAIL } from './types';\nimport axios from 'axios';\n\n// Action creator for user login\nexport const loginUser = credentials => async dispatch => {\n  try {\n    const response = await axios.post('/api/auth/login', credentials);\n    localStorage.setItem('token', response.data.token);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: response.data\n    });\n    alert('Login successful!');\n  } catch (error) {\n    var _error$response, _error$response$data, _error$response2, _error$response2$data;\n    dispatch({\n      type: LOGIN_FAIL,\n      payload: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed'\n    });\n    alert('Login failed: ' + (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Unknown error'));\n  }\n};\n\n// Action creator for user registration\nexport const registerUser = userData => async dispatch => {\n  try {\n    const response = await axios.post('/api/auth/register', userData);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: response.data\n    });\n    alert('Registration successful! Please login.');\n  } catch (error) {\n    var _error$response3, _error$response3$data, _error$response4, _error$response4$data;\n    dispatch({\n      type: REGISTER_FAIL,\n      payload: ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Registration failed'\n    });\n    alert('Registration failed: ' + (((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Unknown error'));\n  }\n};","map":{"version":3,"names":["LOGIN_SUCCESS","LOGIN_FAIL","REGISTER_SUCCESS","REGISTER_FAIL","axios","loginUser","credentials","dispatch","response","post","localStorage","setItem","data","token","type","payload","alert","error","_error$response","_error$response$data","_error$response2","_error$response2$data","message","registerUser","userData","_error$response3","_error$response3$data","_error$response4","_error$response4$data"],"sources":["C:/Users/HP/OneDrive/Desktop/MERNproj/GarageSale.com/GarageSale.com/client/src/features/auth/actions.js"],"sourcesContent":["// filepath: c:\\Users\\HP\\OneDrive\\Desktop\\MERNproj\\GarageSale.com\\client\\features\\auth\\actions.js\n\nimport { LOGIN_SUCCESS, LOGIN_FAIL, REGISTER_SUCCESS, REGISTER_FAIL } from './types';\nimport axios from 'axios';\n\n// Action creator for user login\nexport const loginUser = (credentials) => async (dispatch) => {\n    try {\n        const response = await axios.post('/api/auth/login', credentials);\n        localStorage.setItem('token', response.data.token);\n        dispatch({\n            type: LOGIN_SUCCESS,\n            payload: response.data,\n        });\n        alert('Login successful!');\n    } catch (error) {\n        dispatch({\n            type: LOGIN_FAIL,\n            payload: error.response?.data?.message || 'Login failed',\n        });\n        alert('Login failed: ' + (error.response?.data?.message || 'Unknown error'));\n    }\n};\n\n// Action creator for user registration\nexport const registerUser = (userData) => async (dispatch) => {\n    try {\n        const response = await axios.post('/api/auth/register', userData);\n        dispatch({\n            type: REGISTER_SUCCESS,\n            payload: response.data,\n        });\n        alert('Registration successful! Please login.');\n    } catch (error) {\n        dispatch({\n            type: REGISTER_FAIL,\n            payload: error.response?.data?.message || 'Registration failed',\n        });\n        alert('Registration failed: ' + (error.response?.data?.message || 'Unknown error'));\n    }\n};"],"mappings":"AAAA;;AAEA,SAASA,aAAa,EAAEC,UAAU,EAAEC,gBAAgB,EAAEC,aAAa,QAAQ,SAAS;AACpF,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA,OAAO,MAAMC,SAAS,GAAIC,WAAW,IAAK,MAAOC,QAAQ,IAAK;EAC1D,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,iBAAiB,EAAEH,WAAW,CAAC;IACjEI,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,QAAQ,CAACI,IAAI,CAACC,KAAK,CAAC;IAClDN,QAAQ,CAAC;MACLO,IAAI,EAAEd,aAAa;MACnBe,OAAO,EAAEP,QAAQ,CAACI;IACtB,CAAC,CAAC;IACFI,KAAK,CAAC,mBAAmB,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA,EAAAC,oBAAA,EAAAC,gBAAA,EAAAC,qBAAA;IACZd,QAAQ,CAAC;MACLO,IAAI,EAAEb,UAAU;MAChBc,OAAO,EAAE,EAAAG,eAAA,GAAAD,KAAK,CAACT,QAAQ,cAAAU,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBN,IAAI,cAAAO,oBAAA,uBAApBA,oBAAA,CAAsBG,OAAO,KAAI;IAC9C,CAAC,CAAC;IACFN,KAAK,CAAC,gBAAgB,IAAI,EAAAI,gBAAA,GAAAH,KAAK,CAACT,QAAQ,cAAAY,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBR,IAAI,cAAAS,qBAAA,uBAApBA,qBAAA,CAAsBC,OAAO,KAAI,eAAe,CAAC,CAAC;EAChF;AACJ,CAAC;;AAED;AACA,OAAO,MAAMC,YAAY,GAAIC,QAAQ,IAAK,MAAOjB,QAAQ,IAAK;EAC1D,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,oBAAoB,EAAEe,QAAQ,CAAC;IACjEjB,QAAQ,CAAC;MACLO,IAAI,EAAEZ,gBAAgB;MACtBa,OAAO,EAAEP,QAAQ,CAACI;IACtB,CAAC,CAAC;IACFI,KAAK,CAAC,wCAAwC,CAAC;EACnD,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAQ,gBAAA,EAAAC,qBAAA,EAAAC,gBAAA,EAAAC,qBAAA;IACZrB,QAAQ,CAAC;MACLO,IAAI,EAAEX,aAAa;MACnBY,OAAO,EAAE,EAAAU,gBAAA,GAAAR,KAAK,CAACT,QAAQ,cAAAiB,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBb,IAAI,cAAAc,qBAAA,uBAApBA,qBAAA,CAAsBJ,OAAO,KAAI;IAC9C,CAAC,CAAC;IACFN,KAAK,CAAC,uBAAuB,IAAI,EAAAW,gBAAA,GAAAV,KAAK,CAACT,QAAQ,cAAAmB,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBf,IAAI,cAAAgB,qBAAA,uBAApBA,qBAAA,CAAsBN,OAAO,KAAI,eAAe,CAAC,CAAC;EACvF;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}